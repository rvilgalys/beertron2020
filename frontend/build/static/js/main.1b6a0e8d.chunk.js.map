{"version":3,"sources":["pages/Auth.js","components/Beer/BeerCard.js","pages/BeerDB.js","pages/Drafts.js","components/Navigation/MainNav.js","App.js","index.js"],"names":["AuthPage","state","isAuth","newUser","registerUser","react_default","a","createElement","className","type","onClick","_this","toggleNewUser","loginUser","setState","this","Component","BeerCard","props","draftButtonClasses","draftButtonLabel","tapped","beerData","beerName","clicked","_id","breweryName","beerStyle","abv","ibu","BeerDBPage","searchTerms","dummyBeerData","updateSearchTerms","event","newSearch","target","value","beerDBQuery","gql","toggleDraftMutation","toggleDraftStatus","draftID","_this2","onChange","placeholder","react_apollo_browser_umd","query","_ref","loading","error","data","refetch","console","log","beers","filter","beer","toLowerCase","includes","slice","map","dbBeerData","mutation","key","onCompleted","_ref2","components_Beer_BeerCard","showDraftButton","id","variables","beerID","DraftPage","mainNav","NavLink","to","token","localStorage","getItem","client","ApolloClient","uri","request","_request","Object","asyncToGenerator","regenerator_default","mark","_callee","operation","wrap","_context","prev","next","setContext","headers","authorization","concat","stop","_x","apply","arguments","onError","err","App","BrowserRouter","Fragment","Navigation_MainNav","Switch","Redirect","from","process","exact","Route","path","component","DraftsPage","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.1b6a0e8d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass AuthPage extends Component {\n  state = {\n    isAuth: false,\n    newUser: true\n  };\n\n  registerUser = () => {\n    return (\n      <div className=\"content-area\">\n        <h3>Register New User</h3>\n        Email: <br />\n        <input className=\"new-user-email\" type=\"email\" /> <br />\n        Password: <br />\n        <input className=\"new-user-password\" type=\"password\" /> <br />\n        <button onClick={this.toggleNewUser}>Login Existing User</button>\n      </div>\n    );\n  };\n\n  loginUser = () => {\n    return (\n      <div className=\"content-area\">\n        <h3>Login User</h3>\n        Email: <br />\n        <input className=\"login-email\" type=\"email\" /> <br />\n        Password: <br />\n        <input className=\"login-password\" type=\"password\" /> <br />\n        <button onClick={this.toggleNewUser}>Register New User</button>\n      </div>\n    );\n  };\n\n  toggleNewUser = () => {\n    this.setState({\n      newUser: !this.state.newUser\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"user-login\">\n        <h1>Auth Page</h1>\n        {this.state.newUser ? this.registerUser() : this.loginUser()}\n      </div>\n    );\n  }\n}\n\nexport default AuthPage;\n","import React from \"react\";\n\nimport \"./BeerCard.css\";\n\nconst BeerCard = props => {\n  let draftButtonClasses = \"beer-draft-button\";\n  let draftButtonLabel = \"üç∫ Put on Draft üç∫\";\n\n  if (props.tapped) {\n    draftButtonClasses += \" on-draft\";\n    draftButtonLabel = \"üç∫ On Draft üç∫\";\n  }\n\n  return (\n    <div className=\"beer-card\">\n      <h3>\n        <span className=\"beer-name\">{props.beerData.beerName}</span>\n      </h3>\n\n      <button\n        className={draftButtonClasses}\n        onClick={() => props.clicked(props.beerData._id)}\n      >\n        {draftButtonLabel}\n      </button>\n\n      <span className=\"brewery-name\">{props.beerData.breweryName}</span>\n      <span className=\"beer-style\">{props.beerData.beerStyle}</span>\n      <span className=\"beer-abv\">{props.beerData.abv}</span>\n      <span className=\"beer-ibu\">{props.beerData.ibu}</span>\n    </div>\n  );\n};\n\nexport default BeerCard;\n","import React, { Component } from \"react\";\nimport BeerCard from \"../components/Beer/BeerCard\";\nimport { Query, Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\nclass BeerDBPage extends Component {\n  state = {\n    searchTerms: \"\"\n  };\n\n  dummyBeerData = {\n    beerName: \"Tasty Beer\",\n    breweryName: \"Brewster's Brewery\",\n    beerStyle: \"SMASH IPA\",\n    abv: \"5.0%\",\n    ibu: \"100\"\n  };\n\n  updateSearchTerms = event => {\n    const newSearch = event.target.value;\n    this.setState({ searchTerms: newSearch });\n  };\n\n  beerDBQuery = gql`\n    query {\n      beers {\n        _id\n        breweryName\n        beerName\n        beerStyle\n        abv\n        ibu\n        tapped\n      }\n    }\n  `;\n\n  toggleDraftMutation = gql`\n    mutation ToggleDraftStatus($beerID: ID!) {\n      toggleDraftStatus(toggleDraftInput: { beerID: $beerID }) {\n        beerName\n        tapped\n      }\n    }\n  `;\n\n  toggleDraftStatus = draftID => {};\n\n  render() {\n    return (\n      <div className=\"content-area\">\n        <h1>BeerDB Page</h1>\n        <input\n          className=\"beer-search\"\n          value={this.state.searchTerms}\n          onChange={this.updateSearchTerms}\n          placeholder=\"Search Here\"\n        />\n        <div className=\"results-container\">\n          <Query query={this.beerDBQuery}>\n            {({ loading, error, data, refetch }) => {\n              if (loading) return <p>Loading...</p>;\n              if (error) return <p>Error!</p>;\n              if (error) console.log(error);\n\n              return data.beers\n                .filter(beer => {\n                  if (\n                    beer.beerName\n                      .toLowerCase()\n                      .includes(this.state.searchTerms.toLowerCase()) ||\n                    beer.breweryName\n                      .toLowerCase()\n                      .includes(this.state.searchTerms.toLowerCase()) ||\n                    beer.beerStyle\n                      .toLowerCase()\n                      .includes(this.state.searchTerms.toLowerCase())\n                  ) {\n                    return true;\n                  }\n                  return false;\n                })\n                .slice(0, 50) // max of 50 beers returned so we don't kill the page (would add multiple pages or lazy load with more time)\n                .map(dbBeerData => {\n                  return (\n                    <Mutation\n                      mutation={this.toggleDraftMutation}\n                      key={dbBeerData._id}\n                      onCompleted={() => refetch()} // this is not ideal but it works for now\n                    >\n                      {(toggleDraftMutation, { loading, error }) => (\n                        <BeerCard\n                          beerData={dbBeerData}\n                          tapped={dbBeerData.tapped}\n                          showDraftButton={true}\n                          clicked={id => {\n                            toggleDraftMutation({\n                              variables: { beerID: id }\n                            });\n                          }}\n                        />\n                      )}\n                    </Mutation>\n                  );\n                });\n            }}\n          </Query>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BeerDBPage;\n","import React, { Component } from \"react\";\nimport BeerCard from \"../components/Beer/BeerCard\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\nclass DraftPage extends Component {\n  // with a refactor we should consolidate this with the other request and provide it to both components\n  beerDBQuery = gql`\n    query {\n      beers {\n        _id\n        breweryName\n        beerName\n        beerStyle\n        abv\n        ibu\n        tapped\n      }\n    }\n  `;\n\n  clicked = () => {}; // don't do anyting on the draft menu\n\n  render() {\n    return (\n      <div className=\"content-area\">\n        <h1>What's On Draft</h1>\n        <div className=\"results-container\">\n          <Query query={this.beerDBQuery}>\n            {({ loading, error, data }) => {\n              if (loading) return <p>Loading...</p>;\n              if (error) return <p>Error!</p>;\n              if (error) console.log(error);\n\n              return data.beers\n                .filter(beer => beer.tapped)\n                .slice(0, 50) // max of 50 beers for now so we don't kill the page (would add multiple pages or lazy load with more time)\n                .map(dbBeerData => (\n                  <BeerCard\n                    beerData={dbBeerData}\n                    tapped={dbBeerData.tapped}\n                    showDraftButton={false}\n                    clicked={this.clicked}\n                    key={dbBeerData._id}\n                  />\n                ));\n            }}\n          </Query>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DraftPage;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport \"./MainNav.css\";\n\nconst mainNav = props => (\n  <header className=\"main-nav-header\">\n    <div>\n      <h1>BEERTRON2020</h1>\n    </div>\n    <nav className=\"main-nav-list\">\n      <ul>\n        <li>\n          <NavLink to=\"/auth\">User</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/beerDB\">Database</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/drafts\">Drafts</NavLink>\n        </li>\n      </ul>\n    </nav>\n  </header>\n);\n\nexport default mainNav;\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider, Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\nimport AuthPage from \"./pages/Auth\";\nimport BeerDBPage from \"./pages/BeerDB\";\nimport DraftsPage from \"./pages/Drafts\";\nimport MainNav from \"./components/Navigation/MainNav\";\n\nimport \"./App.css\";\n\nconst token = localStorage.getItem(\"token\");\n\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000/graphql\",\n  request: async operation => {\n    operation.setContext({\n      headers: {\n        authorization: token ? `Bearer ${token}` : \"\"\n      }\n    });\n  },\n  onError: err => console.log(err)\n});\n\nclass App extends Component {\n  render() {\n    return (\n      <ApolloProvider client={client}>\n        <BrowserRouter>\n          <React.Fragment>\n            <MainNav />\n            <div className=\"main-content\">\n              <Switch>\n                <Redirect\n                  from={`${process.env.PUBLIC_URL}/`}\n                  to={`${process.env.PUBLIC_URL}/auth`}\n                  exact\n                />\n                <Route\n                  path={`${process.env.PUBLIC_URL}/auth`}\n                  component={AuthPage}\n                />\n                <Route\n                  path={`${process.env.PUBLIC_URL}/drafts`}\n                  component={DraftsPage}\n                />\n                <Route\n                  path={`${process.env.PUBLIC_URL}/beerDB`}\n                  component={BeerDBPage}\n                />\n              </Switch>\n            </div>\n          </React.Fragment>\n        </BrowserRouter>\n      </ApolloProvider>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}